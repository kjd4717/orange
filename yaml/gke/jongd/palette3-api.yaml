apiVersion: v1
kind: Service
metadata:
  name: svc-palette3-api
  labels:
    app: palette3-api
spec:
  type: NodePort
  selector:
    app: palette3-api
  ports:
    - name: palette3-api
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: palette3-api
  labels:
    app: palette3-api
spec:
  replicas: 1
  serviceName: palette3-api
  #podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: palette3-api
  template:
    metadata:
      labels:
        app: palette3-api
    spec:
      imagePullSecrets:
       - name: regcred 
      containers:
        - name: palette3-api
          image: ghcr.io/kjd4717/palette3-api:2023.0628.106
          env:
            - name: JAVA_OPTS
              value: "-Dspring.application.name=palette3-api -Dspring.profiles.active=production,production-chat,production-phone -Djasypt.key=paletteHello -Dpalette.chat.cipher=Y -Dpalette.chat.key=MnR6bzI4bjdocGEw -Dchat.enabled=false -Dchat.router-enabled=false -Dk8s.node.name=${MY_NODE_NAME} -Dk8s.pod.name=${MY_POD_NAME} -Dk8s.pod.namespace=${MY_POD_NAMESPACE} -Dk8s.pod.ip=${MY_POD_IP}"
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      restartPolicy: Always
